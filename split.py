# -*- coding: utf-8 -*-
"""split.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_zdYl3jh5bdQ1cIgX_St2NcHgnyYRYwz
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install Pillow

"""# **Data split**"""

import os
import shutil
import random
import math

# Define the base directory
base_dir = '/content/drive/MyDrive/Preprocessing'

# Construct full paths for train, validation, and test directories
train_dir = os.path.join(base_dir, 'train')
validation_dir = os.path.join(base_dir, 'val')
test_dir = os.path.join(base_dir, 'test')

# Check if the directories already exist before creating them
if not os.path.exists(train_dir):
    os.mkdir(train_dir)
else:
    print(f"Directory '{train_dir}' already exists.")

if not os.path.exists(validation_dir):
    os.mkdir(validation_dir)
else:
    print(f"Directory '{validation_dir}' already exists.")

if not os.path.exists(test_dir):
    os.mkdir(test_dir)
else:
    print(f"Directory '{test_dir}' already exists.")

# Define the base directory where your data is stored
base_dir = '/content/drive/MyDrive/Preprocessing'
train_dir = '/content/drive/MyDrive/Preprocessing/train/images'
validation_dir = '/content/drive/MyDrive/Preprocessing/val/images'
test_dir = '/content/drive/MyDrive/Preprocessing/test/images'

classes = ['class1', 'class2','class3']
split_ratio = 0.7  # 70% training, 10% validation 20% test
for class_name in classes:
    class_dir = os.path.join(base_dir, class_name)
    images = os.listdir(class_dir)
    num_images = len(images)
    print("num_images",num_images)

    # Calculate the number of images for each split
    num_train = int(round(split_ratio * num_images))
    print("num_train",num_train)
    num_validation = int(round(0.1 * num_images))  # 10% for validation
    print("num_validation",num_validation)

    # Shuffle the images randomly
    random.shuffle(images)

    # Split and move the images
    train_images = images[:num_train]
    validation_images = images[num_train:num_train + num_validation]
    test_images = images[num_train + num_validation:]
    print("num_test",len(test_images))
    print("\n")

    for img in train_images:
      src = os.path.join(class_dir, img)
      dst = os.path.join(train_dir, class_name, img)
      shutil.copy(src, dst)

    for img in validation_images:
      src = os.path.join(class_dir, img)
      dst = os.path.join(validation_dir, class_name, img)
      shutil.copy(src, dst)

    for img in test_images:
      src = os.path.join(class_dir, img)
      dst = os.path.join(test_dir, class_name, img)
      shutil.copy(src, dst)